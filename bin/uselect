#!/usr/bin/env perl

# PODNAME: uselect
# ABSTRACT: interactive selection filter
# VERSION

use strict;
use warnings;

use App::USelect qw( run );
use Getopt::Long qw( GetOptions );
use Pod::Usage qw( pod2usage );

my %opt = (
    include_blanks  => 0,
    select_code     => '1',
);

my @options_spec = (
    "blank_lines|b"     => \$opt{include_blanks},
    "help|h|?"          => sub { pod2usage(0) },
    "select|s=s"        => \$opt{select_code},
    "version|v"         => sub {
            print "uselect v$App::USelect::VERSION\n";
            exit 0;
        },
);

GetOptions(@options_spec)
    or pod2usage(1);

my $err = run(\%opt, \@ARGV);
exit $err;

__END__

=pod

=head1 SYNOPSIS

uselect [options] [select text]

  options:
     --blank_lines, -b
        Force blank lines to be selectable.

    --help, -h, -?
        Show this help.

    --select <perl expression>, -s <perl expression>
        Select only those lines for which given perl expression evaluates to
        true. The input lines are passed as $_.

    --version, -v
        Print the version and exit.

  Input lines can be specified on the command line after the options, otherwise
  they will be read from stdin.

=head1 DESCRIPTION

uselect is a reimplementation of iselect by Ralf S. Engelschall

    http://www.ossp.org/pkg/tool/iselect/

uselect is intended to be used as an interactive unix filter. Input lines are
displayed to the user, and selected lines are written to stderr.

=head1 SERVING SUGGESTIONS

fv() { vim $( find . -type f | sort | fgrep "$@" | uselect ); }

gv() { vim $( ack --heading --break "$@" | uselect -s '!/^\d+:/ ); }

=cut
